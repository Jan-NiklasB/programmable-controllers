[item-name]
controller-pow = Controller Power Inlet Module
controller-cpu = Controller CPU Module
controller-mem = Controller Memory Module
controller-ext = Controller Extention Module
controller-con = Controller Circuit Network Module
[item-description]
controller-pow = Provide electric power to computer grid
controller-cpu = Provide calculation power to computer grid
controller-mem = Provide memory to computer grid
controller-ext = Permit to connect units in computer grid
controller-con = Provide connection to Circuit Network
[virtual-signal-name]
pci-00=00 nop -- : do nothing
pci-01=01 val #A : copy #A to %R
pci-02=02 get &A : copy @A to %R
pci-03=03 get @A : copy &A to %R
pci-04=04 set &A : copy %R to &A
pci-05=05 set @A : copy %R to @A
pci-06=06 swp @A : swap %R with @A
pci-07=07 swp &A : swap %R with &A
pci-08=08 slp #A : wait #A processor cycles
pci-09=09 slp @A : wait @A processor cycles
pci-0A=0A yld #A : wait #A game tick
pci-0B=0B yld @A : wait @A game tick
pci-0C=0C int @A : wait for modification on @A
pci-0D=0D int &A : wait for modification on &A 
pci-0E=0E hlt #A : halt with code #A
pci-0F=0F hlt @A : halt with code @A
pci-10=10 jmp @A : jump to @A
pci-11=11 jmp &A : jump to &A
pci-12=12 rjp #A : jump relative by #A
pci-13=13 rjp @A : jump relative by @A
pci-14=14 seq #A : skip if %R == #A
pci-15=15 seq @A : skip if %R == @A
pci-16=1A snq #A : skip if %R != #A
pci-17=1B snq @A : skip if %R != @A
pci-18=16 slt #A : skip if %R < #A
pci-19=17 slt @A : skip if %R < @A
pci-1A=18 sgt #A : skip if %R > #A
pci-1B=19 sgt @A : skip if %R > @A
pci-1C=1C slq #A : skip if %R <= #A
pci-1D=1D slq @A : skip if %R <= @A
pci-1E=1E sgq #A : skip if %R >= #A
pci-1F=1F sgq @A : skip if %R >= @A
pci-20=20 add @A : add %R to @A
pci-21=21 add &A : add %R to &A
pci-22=22 sub @A : sub %R to @A
pci-23=23 sub &A : sub %R to &A
pci-24=24 inc @A : increase @A by 1
pci-25=25 inc &A : increase &A by 1
pci-26=26 dec @A : decrease @A by 1
pci-27=27 dec &A : decrease &A by 1
pci-28=40 mul @A : multiply by %R in @A
pci-29=41 mul &A : multiply by %R in &A
pci-2A=42 dvf @A : floor division @A by %R
pci-2B=43 dvf &A : floor division &A by %R
pci-2C=44 dvc @A : ceil division @A by %R
pci-2D=45 dvc &A : ceil division &A by %R
pci-2E=46 mod @A : modulo @A by %R
pci-2F=47 mod &A : modulo &A by %R
pci-30=2C neg @A : negate @A
pci-31=2D neg &A : negate &A
pci-32=2E not @A : bitwise not @A
pci-33=2F not &A : bitwise not &A
pci-34=28 lsh @A : left shift @A by %R
pci-35=29 lsh &A : left shift &A by %R
pci-36=2A rsh @A : right shift @A by %R
pci-37=2B rsh &A : right shift &A by %R
pci-38=30 and @A : bitwise and @A by %R
pci-39=31 and &A : bitwise and &A by %R
pci-3A=32 adn @A : bitwise and @A by not %R
pci-3B=33 adn &A : bitwise and &A by not %R
pci-3C=34 nad @A : bitwise nand @A by %R
pci-3D=35 nad &A : bitwise nand &A by %R
pci-3E=36 ndn @A : bitwise nand @A by not %R
pci-3F=37 ndn &A : bitwise nand &A by not %R
pci-40=38 ior @A : bitwise or @A by %R
pci-41=39 ior &A : bitwise or &A by %R
pci-42=3A orn @A : bitwise or @A by not %R
pci-43=3B orn &A : bitwise or &A by not %R
pci-44=3C nor @A : bitwise nor @A by %R
pci-45=3D nor &A : bitwise nor &A by %R
pci-46=3E nrn @A : bitwise nor @A by not %R
pci-47=3F nrn &A : bitwise nor &A by not %R
pci-48=48 xor @A : bitwise xor @A by %R
pci-49=49 xor &A : bitwise xor &A by %R
pci-4A=4A nxr @A : bitwise nxor @A by %R
pci-4B=4B xrn &A : bitwise nxor &A by %R
pci-4C=4C rnd @A : random in @A
pci-4D=4D rnd &A : random in &A
pci-4E=4E rnd @A : random in @A in %R range
pci-4F=4F rnd &A : random in &A in %R range

[item-group-name]
programmable-controllers = Programmable Controllers

[entity-name]
controller-pow = Controller Power Inlet Module
controller-cpu = Controller CPU Module
controller-mem = Controller Memory Module
controller-ext = Controller Extention Module
controller-con = Controller Circuit Network Module
